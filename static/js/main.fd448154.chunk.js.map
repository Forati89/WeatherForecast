{"version":3,"sources":["components/WeatherDataList.js","components/WeatherFiveDay.js","components/WeatherDataContainer.js","App.js","serviceWorker.js","index.js"],"names":["WeatherDataList","Fragment","Row","Col","this","props","currCNM","currCLTMP","Image","src","currWICON","rounded","currCLT","Component","WeatherFiveDay","d1D","d1CI","d1MXT","d1MNT","d2D","d2CI","d2MXT","d2MNT","d3D","d3CI","d3MXT","d3MNT","d4D","d4CI","d4MXT","d4MNT","d5D","d5CI","d5MXT","d5MNT","WeatherDataContainer","state","weatherdata","CurrentCityName","CurrentLocalDate","CurrentLocalTemp","CurrentLocalWICON","isLoaded","fiveDaysData","DayOneMaxTemp","DayOneMinTemp","DayOneCondIcon","DayOneDate","DayTwoMaxTemp","DayTwoMinTemp","DayTwoCondIcon","DayTwoDate","DayThreeMaxTemp","DayThreeMinTemp","DayThreeCondIcon","DayThreeDate","DayFourMaxTemp","DayFourMinTemp","DayFourCondIcon","DayFourDate","DayFiveMaxTemp","DayFiveMinTemp","DayFiveCondIcon","DayFiveDate","fetch","then","response","json","setState","weatherdataCurrentCityName","location","name","weatherdataCurrentLocalDate","localtime","weatherdataCurrentLocalTemp","current","temp_c","weatherdataCurrentLocalWICON","condition","icon","weatherTemp","responseFiveDays","fiveDaysDataDayOneMaxTemp","forecast","forecastday","day","maxtemp_c","fiveDaysDataDayOneMinTemp","mintemp_c","fiveDaysDataDayOneCondIcon","fiveDaysDataDayOneDate","date","fiveDaysDataDayTwoMaxTemp","fiveDaysDataDayTwoMinTemp","fiveDaysDataDayTwoCondIcon","fiveDaysDataDayTwoDate","fiveDaysDataDayThreeMaxTemp","fiveDaysDataDayThreeMinTemp","fiveDaysDataDayThreeCondIcon","fiveDaysDataDayThreeDate","fiveDaysDataDayFourMaxTemp","fiveDaysDataDayFourMinTemp","fiveDaysDataDayFourCondIcon","fiveDaysDataDayFourDate","fiveDaysDataDayFiveMaxTemp","fiveDaysDataDayFiveMinTemp","fiveDaysDataDayFiveCondIcon","fiveDaysDataDayFiveDate","App","className","Container","style","backgroundColor","height","color","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd448154.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Image } from 'react-bootstrap';\r\n\r\nexport default class WeatherDataList extends Component {\r\n\r\n    render() {\r\n\r\n        //render props to Container\r\n        return (\r\n            <React.Fragment>\r\n                <Row>\r\n                    <Col>\r\n                    <h1>{this.props.currCNM}</h1>\r\n                    <h3><b>{this.props.currCLTMP} &#8451;</b></h3>\r\n                    <Image src={this.props.currWICON} rounded />\r\n\r\n                    </Col>\r\n                    <Col>\r\n                    <h5>Lokal Tid & Datum</h5>\r\n                    <h3>{this.props.currCLT}</h3>\r\n                    </Col>\r\n\r\n                </Row>\r\n                \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Row, Col, Image } from 'react-bootstrap';\r\n\r\nexport default class WeatherFiveDay extends Component {\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <React.Fragment>\r\n            <Row>\r\n            <Col>\r\n            <b>Datum: {this.props.d1D}</b>\r\n            <Image src={this.props.d1CI} rounded />\r\n            <b></b>\r\n            <p>Max Tempratur: <b>{this.props.d1MXT} &#8451;</b></p>\r\n            <p>Min Tempratur: <b>{this.props.d1MNT} &#8451;</b></p>\r\n            </Col>\r\n            <Col >\r\n            <b>Datum: {this.props.d2D}</b>\r\n            <Image src={this.props.d2CI} rounded />\r\n            <b></b>\r\n            <p>Max Tempratur: <b>{this.props.d2MXT} &#8451;</b></p>\r\n            <p>Min Tempratur: <b>{this.props.d2MNT} &#8451;</b></p>\r\n            </Col>\r\n            <Col >\r\n            <b>Datum: {this.props.d3D}</b>\r\n            <Image src={this.props.d3CI} rounded />\r\n            <p>Max Tempratur: <b>{this.props.d3MXT} &#8451;</b></p>\r\n            <p>Min Tempratur: <b>{this.props.d3MNT} &#8451;</b></p>\r\n            </Col>\r\n            <Col >\r\n            <b>Datum: {this.props.d4D}</b>\r\n            <Image src={this.props.d4CI} rounded />\r\n            <p>Max Tempratur: <b>{this.props.d4MXT} &#8451;</b></p>\r\n            <p>Min Tempratur: <b>{this.props.d4MNT} &#8451;</b></p>\r\n            </Col>\r\n            <Col >\r\n            <b>Datum: {this.props.d5D}</b>\r\n            <Image src={this.props.d5CI} rounded />\r\n            <p>Max Tempratur: <b>{this.props.d5MXT} &#8451;</b></p>\r\n            <p>Min Tempratur: <b>{this.props.d5MNT} &#8451;</b></p>\r\n            </Col>\r\n            </Row>\r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n\r\n\r\n}","import React, { Component } from 'react';\r\nimport WeatherDataList from './WeatherDataList';\r\nimport WeatherFiveDay from './WeatherFiveDay'\r\n\r\nexport default class WeatherDataContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            weatherdata: [{\r\n                CurrentCityName: \"\", CurrentLocalDate: \"\", CurrentLocalTemp: \"\", CurrentLocalWICON: \"\"\r\n            }],\r\n            isLoaded: true,\r\n            fiveDaysData: [{\r\n                DayOneMaxTemp: \"\", DayOneMinTemp: \"\", DayOneCondIcon: \"\", DayOneDate: \"\",\r\n                DayTwoMaxTemp: \"\", DayTwoMinTemp: \"\", DayTwoCondIcon: \"\", DayTwoDate: \"\",\r\n                DayThreeMaxTemp: \"\", DayThreeMinTemp: \"\", DayThreeCondIcon: \"\", DayThreeDate: \"\",\r\n                DayFourMaxTemp: \"\", DayFourMinTemp: \"\", DayFourCondIcon: \"\", DayFourDate: \"\",\r\n                DayFiveMaxTemp: \"\", DayFiveMinTemp: \"\", DayFiveCondIcon: \"\", DayFiveDate: \"\"\r\n            }]\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const url = \"http://api.apixu.com/v1/current.json?key=c0a69043db744ad6954192413190209&q=Stockholm\";\r\n        fetch(url)\r\n            .then((response) => response.json())\r\n            .then(json => this.setState({\r\n                weatherdataCurrentCityName: json.location.name,\r\n                weatherdataCurrentLocalDate: json.location.localtime,\r\n                weatherdataCurrentLocalTemp: json.current.temp_c,\r\n                weatherdataCurrentLocalWICON: json.current.condition.icon,\r\n                isLoaded: false,\r\n                weatherTemp: json.current // ???\r\n            }))\r\n\r\n        const urlFiveDays = \"http://api-cdn.apixu.com/v1/forecast.json?key=c0a69043db744ad6954192413190209&q=Stockholm&days=5\";\r\n        fetch(urlFiveDays)\r\n            .then((responseFiveDays) => responseFiveDays.json())\r\n            .then(json => this.setState({\r\n                //day one\r\n                fiveDaysDataDayOneMaxTemp: json.forecast.forecastday[0].day.maxtemp_c,\r\n                fiveDaysDataDayOneMinTemp: json.forecast.forecastday[0].day.mintemp_c,\r\n                fiveDaysDataDayOneCondIcon: json.forecast.forecastday[0].day.condition.icon,\r\n                fiveDaysDataDayOneDate: json.forecast.forecastday[0].date,\r\n                // day two\r\n                fiveDaysDataDayTwoMaxTemp: json.forecast.forecastday[1].day.maxtemp_c,\r\n                fiveDaysDataDayTwoMinTemp: json.forecast.forecastday[1].day.mintemp_c,\r\n                fiveDaysDataDayTwoCondIcon: json.forecast.forecastday[1].day.condition.icon,\r\n                fiveDaysDataDayTwoDate: json.forecast.forecastday[1].date,\r\n                // day three\r\n                fiveDaysDataDayThreeMaxTemp: json.forecast.forecastday[2].day.maxtemp_c,\r\n                fiveDaysDataDayThreeMinTemp: json.forecast.forecastday[2].day.mintemp_c,\r\n                fiveDaysDataDayThreeCondIcon: json.forecast.forecastday[2].day.condition.icon,\r\n                fiveDaysDataDayThreeDate: json.forecast.forecastday[2].date,\r\n                // day four\r\n                fiveDaysDataDayFourMaxTemp: json.forecast.forecastday[3].day.maxtemp_c,\r\n                fiveDaysDataDayFourMinTemp: json.forecast.forecastday[3].day.mintemp_c,\r\n                fiveDaysDataDayFourCondIcon: json.forecast.forecastday[3].day.condition.icon,\r\n                fiveDaysDataDayFourDate: json.forecast.forecastday[3].date,\r\n                // day five\r\n                fiveDaysDataDayFiveMaxTemp: json.forecast.forecastday[4].day.maxtemp_c,\r\n                fiveDaysDataDayFiveMinTemp: json.forecast.forecastday[4].day.mintemp_c,\r\n                fiveDaysDataDayFiveCondIcon: json.forecast.forecastday[4].day.condition.icon,\r\n                fiveDaysDataDayFiveDate: json.forecast.forecastday[4].date\r\n\r\n            }))\r\n    }\r\n\r\n\r\n    render() {\r\n        // console.log(this.state.weatherdataCurrentCityName)\r\n        // console.log(this.state.weatherdataCurrentLocalDate)\r\n        // console.log(this.state.weatherdataCurrentLocalTemp)\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <WeatherDataList\r\n                    currCNM={this.state.weatherdataCurrentCityName}\r\n                    currCLT={this.state.weatherdataCurrentLocalDate}\r\n                    currCLTMP={this.state.weatherdataCurrentLocalTemp}\r\n                    currWICON={this.state.weatherdataCurrentLocalWICON}\r\n                />\r\n                <WeatherFiveDay\r\n\r\n                    d1MXT={this.state.fiveDaysDataDayOneMaxTemp}\r\n                    d1MNT={this.state.fiveDaysDataDayOneMinTemp}\r\n                    d1D={this.state.fiveDaysDataDayOneDate}\r\n                    d1CI={this.state.fiveDaysDataDayOneCondIcon}\r\n\r\n                    d2MXT={this.state.fiveDaysDataDayTwoMaxTemp}\r\n                    d2MNT={this.state.fiveDaysDataDayTwoMinTemp}\r\n                    d2D={this.state.fiveDaysDataDayTwoDate}\r\n                    d2CI={this.state.fiveDaysDataDayTwoCondIcon}\r\n\r\n                    d3MXT={this.state.fiveDaysDataDayThreeMaxTemp}\r\n                    d3MNT={this.state.fiveDaysDataDayThreeMinTemp}\r\n                    d3D={this.state.fiveDaysDataDayThreeDate}\r\n                    d3CI={this.state.fiveDaysDataDayThreeCondIcon}\r\n\r\n                    d4MXT={this.state.fiveDaysDataDayFourMaxTemp}\r\n                    d4MNT={this.state.fiveDaysDataDayFourMinTemp}\r\n                    d4D={this.state.fiveDaysDataDayFourDate}\r\n                    d4CI={this.state.fiveDaysDataDayFourCondIcon}\r\n\r\n                    d5MXT={this.state.fiveDaysDataDayFiveMaxTemp}\r\n                    d5MNT={this.state.fiveDaysDataDayFiveMinTemp}\r\n                    d5D={this.state.fiveDaysDataDayFiveDate}\r\n                    d5CI={this.state.fiveDaysDataDayFiveCondIcon}\r\n\r\n                />\r\n\r\n\r\n\r\n\r\n            </React.Fragment>\r\n\r\n\r\n        );\r\n\r\n\r\n    }\r\n}\r\n","import React from 'react';\r\nimport WeatherDataContainer from './components/WeatherDataContainer';\r\nimport { Container,Row, Col } from 'reactstrap';\r\nimport { continueStatement } from '@babel/types';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Container>\r\n      <Row style={{backgroundColor: 'black', height: 120}} >\r\n      <Col className=\"text-center my-auto\"><h2 style={{color: 'white'}} >WeatherApp</h2></Col>\r\n        \r\n      </Row>\r\n      <Row>\r\n      <Col className=\"text-center my-auto\"> <WeatherDataContainer /> </Col>\r\n      </Row>\r\n      <Container>\r\n        <Row>\r\n        <Col>\r\n          <br/>\r\n        </Col>\r\n        </Row>\r\n      </Container>\r\n      <Row style={{backgroundColor: 'black', height: 120}}>\r\n      <Col className=\"text-center my-auto\">\r\n      <h1 style={{color: 'white'}} ><i>Hassan Allak \t&copy;</i></h1>\r\n      </Col>\r\n      </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}